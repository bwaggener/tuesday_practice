ncol = NULL,
scales = "fixed",
shrink = TRUE,
labeller = "label_value",
as.table = TRUE,
switch = deprecated(),
drop = TRUE,
dir = "h",
strip.position = "top",
page = 1
)
install.package("ggforce")
install.packages("ggforce")
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
library(lubridate)
library(ggforce)
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_point()+
facet_wrap_paginate(~ swim_site, ncol = 3, nrow = 3, page = 4)
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_point()+
facet_wrap_paginate(~ swim_site, ncol = 3, nrow = 3, page = 5)
total_pages <- 5
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_point()+
facet_wrap_paginate(~ swim_site, ncol = 3, nrow = 3, page = 5)
total_pages <- 5
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_point()+
facet_wrap_paginate(~ swim_site, ncol = 3, nrow = 3, page = 5)
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
library(lubridate)
library(ggforce)
water_quality <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-05-20/water_quality.csv')
weather <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-05-20/weather.csv')
yr_avg_water_quality <-water_quality %>%
group_by(council, year(date)) %>%
summarize(avg_bacteria_cfu = mean(enterococci_cfu_100ml, na.rm = TRUE))
yr_avg_water_quality <- yr_avg_water_quality %>%
rename(year = "year(date)")
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_point()
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_point()+
facet_wrap(~ council)
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_violin()
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()+
facet_wrap(~ council)
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
library(lubridate)
library(ggforce)
water_quality <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-05-20/water_quality.csv')
weather <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-05-20/weather.csv')
yr_avg_water_quality <-water_quality %>%
group_by(council, year(date)) %>%
summarize(avg_bacteria_cfu = mean(enterococci_cfu_100ml, na.rm = TRUE))
yr_avg_water_quality <- yr_avg_water_quality %>%
rename(year = "year(date)")
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()+
facet_wrap(~ council)
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
library(lubridate)
library(ggforce)
library(lme4)
bacteria_beach_model <- lmer(enterococci_cfu_100ml ~ date + swim_site + date * swim_site, data = water_quality)
bacteria_beach_model <- lmer(enterococci_cfu_100ml ~ date + swim_site + date * swim_site + 1, data = water_quality)
bacteria_beach_model <- lmer(enterococci_cfu_100ml ~ date + swim_site + date * swim_site + 1|swim_site, data = water_quality)
View(water_quality)
bacteria_beach_model <- lmer(enterococci_cfu_100ml ~ date + region + date * region + 1|region, data = water_quality)
bacteria_beach_model <- lm(enterococci_cfu_100ml ~ date + region + date * region, data = water_quality)
summary(bacteria_beach_model)
yr_avg_water_quality <-water_quality %>%
group_by(region, year(date)) %>%
summarize(avg_bacteria_cfu = mean(enterococci_cfu_100ml, na.rm = TRUE))
yr_avg_water_quality <- yr_avg_water_quality %>%
rename(year = "year(date)")
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()+
facet_wrap(~region)
bacteria_beach_model <- lm(enterococci_cfu_100ml ~ date * region, data = water_quality)
summary(bacteria_beach_model)
water_quality %>%
cor(x = date, y = enterococci_cfu_100ml, method = "pearson")
water_quality %>%
cor(x = date, y = enterococci_cfu_100ml, method = "pearson", na.rm = TRUE)
water_quality %>%
cor(x = date, y = enterococci_cfu_100ml, method = "pearson", use = "complete.obs")
water_quality %>%
cor(x = date, y = enterococci_cfu_100ml, method = "pearson", use = "complete.obs")water_quality %>%
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
bacteria_beach_model <- lm(enterococci_cfu_100ml ~ date * region, data = water_quality)
summary(bacteria_beach_model)
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
group_by(region) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
group_by(region) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
group_by(region) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
bacteria_beach_model <- lm(enterococci_cfu_100ml ~ date * region, data = water_quality)
summary(bacteria_beach_model)
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
group_by(swim_site) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
group_by(swim_site) %>%
summarize(
correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value
)
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))$p.value
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs"))$estimate,
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(
correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value)
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
group_by(swim_site) %>%
summarize(
correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value
)
water_quality %>%
ggplot(aes(y = enterococci_cfu_100ml))+
geom_violin()+
facet_wrap(~region)
water_quality %>%
ggplot(aes(x = "", y = enterococci_cfu_100ml))+
geom_violin()+
facet_wrap(~region)
View(weather)
water_quality_merge <- left_join(water_quality, weather, by = date)
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
library(lubridate)
library(ggforce)
library(lme4)
water_quality <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-05-20/water_quality.csv')
weather <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-05-20/weather.csv')
yr_avg_water_quality <-water_quality %>%
group_by(region, year(date)) %>%
summarize(avg_bacteria_cfu = mean(enterococci_cfu_100ml, na.rm = TRUE))
yr_avg_water_quality <- yr_avg_water_quality %>%
rename(year = "year(date)")
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()
yr_avg_water_quality %>%
ggplot(aes(x = year, y = avg_bacteria_cfu)) +
geom_smooth()+
facet_wrap(~region)
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
summarize(
correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value)
water_quality %>%
mutate(date_num = as.numeric(date)) %>%
group_by(swim_site) %>%
summarize(
correlation = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(date_num, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value
)
water_quality_merge <- left_join(water_quality, weather, by = date)
water_quality_merge <- left_join(water_quality, weather, by = "date")
View(water_quality_merge)
water_quality_merge %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_point()
water_quality_merge %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_point()+
facet_wrap(~region)
water_quality_merge %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_smooth()+
facet_wrap(~region)
water_quality_merge %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_point+
facet_wrap(~region)
water_quality_merge %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_point()+
facet_wrap(~region)
water_quality_merge %>%
group_by(precipitation_mm) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_point()+
facet_wrap(~region)
water_quality_merge %>%
group_by(precipitation_mm) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_point()
water_quality_merge %>%
group_by(precipitation_mm) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()
water_quality_merge %>%
group_by(precipitation_mm) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()+
facet_wrap(~region)
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()+
facet_wrap(~region)
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()+
labs(
scale.y.limits = c(0, 1000)
))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()+
labs(
scale.y.limits = c(0, 1000)
)
facet_wrap(~region)
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()+
labs(
scale.y.limits = c(0, 1000)
)
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()+
labs(
scale.y.limits = c(0, 300)
)
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter()+
labs(
scale.y.limits = c(0, 50)
)
water_quality_merge %>%
summarize(
correlation = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value)
water_quality %>%
group_by(swim_site) %>%
summarize(
correlation = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value
)
water_quality_merge %>%
summarize(
correlation = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value)
water_quality_merge %>%
group_by(swim_site) %>%
summarize(
correlation = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$estimate,
p_value = cor.test(precipitation_mm, enterococci_cfu_100ml, method = "pearson", use = "complete.obs")$p.value
)
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter() +
coord_cartesian(ylim = c(0, 1000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter() +
coord_cartesian(ylim = c(0, 2000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter() +
coord_cartesian(ylim = c(0, 3000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter() +
coord_cartesian(ylim = c(0, 5000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter() +
coord_cartesian(ylim = c(0, 6000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter() +
coord_cartesian(ylim = c(0, 10000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_smooth() +
coord_cartesian(ylim = c(0, 10000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_smooth() +
geom_jitter()+
coord_cartesian(ylim = c(0, 10000)) +
facet_wrap(~region)
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_smooth() +
geom_jitter()+
coord_cartesian(ylim = c(0, 10000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_smooth() +
geom_jitter(size = 1.5)+
coord_cartesian(ylim = c(0, 10000))
water_quality_merge %>%
group_by(date) %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_smooth() +
geom_jitter(size = .75)+
coord_cartesian(ylim = c(0, 10000))
water_quality_merge %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_smooth() +
geom_jitter(size = .75)+
coord_cartesian(ylim = c(0, 10000))
water_quality_shifted <- water_quality_merge %>%
arrange(date) %>%
group_by(date) %>%
mutate(next_day_bacteria = lead(enterococci_cfu_100ml, 1))  # Shift by 1 day
# Now, you can plot the correlation between precipitation on a given day and the bacteria level on the next day
ggplot(water_quality_shifted, aes(x = precipitation_mm, y = next_day_bacteria)) +
geom_jitter(size = 1.5) +
coord_cartesian(ylim = c(0, 50)) +
labs(
x = "Precipitation (mm)",
y = "Bacteria Level (Day After Rain)"
)
water_quality_shifted <- water_quality_merge %>%
arrange(date) %>%
group_by(date) %>%
mutate(next_day_bacteria = lead(enterococci_cfu_100ml, 1))  # Shift by 1 day
# Now, you can plot the correlation between precipitation on a given day and the bacteria level on the next day
ggplot(water_quality_shifted, aes(x = precipitation_mm, y = next_day_bacteria)) +
geom_jitter(size = 1.5) +
coord_cartesian(ylim = c(0, 10000)) +
labs(
x = "Precipitation (mm)",
y = "Bacteria Level (Day After Rain)"
)
water_quality_shifted <- water_quality_merge %>%
arrange(date) %>%
group_by(date) %>%
mutate(next_day_bacteria = lead(enterococci_cfu_100ml, 1))  # Shift by 1 day
# Now, you can plot the correlation between precipitation on a given day and the bacteria level on the next day
ggplot(water_quality_shifted, aes(x = precipitation_mm, y = next_day_bacteria)) +
geom_jitter(size = .75) +
geom_smooth()+
coord_cartesian(ylim = c(0, 10000)) +
labs(
x = "Precipitation (mm)",
y = "Bacteria Level (Day After Rain)"
)
water_quality_merge %>%
ggplot(aes(x = precipitation_mm, y = enterococci_cfu_100ml)) +
geom_jitter(size = .75)+
geom_smooth() +
coord_cartesian(ylim = c(0, 10000))
install.packages(c("cli", "flextable", "haven", "officer", "parallelly", "parsnip", "promises", "rlang", "V8"))
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
library(lubridate)
library(ggforce)
library(lme4)
gutenberg_authors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_authors.csv')
gutenberg_languages <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_languages.csv')
gutenberg_metadata <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_metadata.csv')
gutenberg_subjects <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_subjects.csv')
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
library(lubridate)
library(ggforce)
library(lme4)
gutenberg_authors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_authors.csv')
gutenberg_languages <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_languages.csv')
gutenberg_metadata <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_metadata.csv')
gutenberg_subjects <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-03/gutenberg_subjects.csv')
glimpse(gutenberg_authors)
glimpse(gutenberg_languages)
glimpse(gutenberg_metadata)
glimpse(gutenberg_subjects)
gutenberg_all <- gutenberg_metadata %>%
left_join(gutenberg_languages, by = "gutenberg_id") %>%
left_join(gutenberg_subjects, by = "gutenberg_id")
View(gutenberg_all)
View(gutenberg_languages)
gutenberg_languages %>%
ggplot(aes(x = language)) +
geom_bar()
gutenberg_languages %>%
ggplot(aes(x = language)) +
geom_bar() +
theme_classic(  )
gutenberg_languages %>%
group_by(language) %>%
summarise(count = n())
View(gutenberg_authors)
gutenberg_authors %>%
group_by(author) %>%
summarise(count = n())
#%>%
# filter(count > 1)
gutenberg_authors %>%
group_by(author) %>%
summarise(count = n()) %>%
filter(count > 1)
gutenberg_authors %>%
group_by(author) %>%
summarise(count = n()) %>%
filter(count > 1)
View(gutenberg_metadata)
gutenberg_metadata %>%
group_by(gutenberg_bookshelf) %>%
summarise(count = n())
View(gutenberg_metadata)
View(gutenberg_subjects)
View(gutenberg_languages)
View(gutenberg_authors)
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
library(lubridate)
library(ggforce)
library(lme4)
answers <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-07-08/answers.csv')
color_ranks <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-07-08/color_ranks.csv')
users <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-07-08/users.csv')
View(users)
View(color_ranks)
renv::activate()
